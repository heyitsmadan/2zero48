@font-face {
  font-family: "Clear Sans";
  src: url("../src/clear-sans.ttf") format("truetype");
}

@font-face {
  font-family: 'Poppins';
  font-style: italic;
  font-weight: 300;
  src: url("../src/Poppins-ExtraLight.ttf");
}

html {
  margin: 0;
  height: 100%;
}

body {
  margin: 0;
  display: flex;
  background-color: #57407c;
  flex-direction: column;
  justify-content: center;
  align-content: center;
  align-items: center;
  font-family: "Clear Sans", sans-serif;
  font-size: 21px;
  height: 100%;
}

.text {
  order: 2;
  padding-top: 40px;
  width: 440px;
  font-weight: bold;
}

#root {
  width: 100%;
}

.boards {
  display: flex;
  width: 100%;
  justify-content: space-around;
  transform: translateY(10%);
}

.board {
  order: 1;
  width: 440px;
  height: 440px;
  padding: 5px;
  background-color: #57407c;
  border-radius: 7px;
  outline: none;
  position: relative;
}

.board .cell,
.tile {
  user-select: none;
  cursor: default;
}

.details-box {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.resetButton {
  background-color: #3d2963;
  color: rgba(255, 255, 255, 0.5);
  cursor: pointer;
  font-size: 25px;
  padding: 10px 20px;
  border-radius: 7px;
  transition: color 0.3s ease, background-color 0.3s ease;
}

.resetButton:hover {
  background-color: #d3386a;
  color: rgba(255, 255, 255, 1);
}

.score-header {
  font-size: 50%;
}

.score-box {
  background-color: #3d2963;
  color: rgba(255, 255, 255, 0.5);
  min-width: 50px;
  width: 70px;
  padding: 5px 15px;
  border-radius: 7px;
  margin-left: 10px;
}

.score-box-B {
  background-color: #3d2963;
  color: rgba(255, 255, 255, 0.5);
  min-width: 50px;
  width: 70px;
  margin-left: auto;
  margin-right: 10px;
  padding: 5px 15px;
  border-radius: 7px;
  text-align: right;
}

.score-box-B-waiting {
  background-color: #3d2963;
  color: rgba(255, 255, 255, 0.5);
  min-width: 50px;
  width: 70px;
  margin-right: 10px;
  padding: 5px 15px;
  border-radius: 7px;
  text-align: right;
}

.cell,
.tile {
  width: 100px;
  height: 100px;
  margin: 5px;
  line-height: 90px;
  display: inline-block;
  font-size: 55px;
  font-weight: bold;
  text-align: center;
  vertical-align: middle;
  border-radius: 7px;
  font-family: "Clear Sans";
  color: #766;
  background-color: #3d2963;
}

.tile0 {
  background-color: #dcb;
}

.tile2 {
  background-color: #eee;
  background-image: url(./assets/img/2.gif);
}

.tile4 {
  background-color: #eec;
  background-image: url(./assets/img/4.gif);
}

.tile8 {
  color: #ffe;
  background-image: url(./assets/img/8.gif);
}

.tile16 {
  color: #ffe;
  background-image: url(./assets/img/16.gif);
}

.tile32 {
  color: #ffe;
  background-image: url(./assets/img/32.gif);
}

.tile64 {
  color: #ffe;
  background-image: url(./assets/img/64.gif);
}

.tile128 {
  color: #ffe;
  background-image: url(./assets/img/128.gif);
}

.tile256 {
  color: #ffe;
  background-image: url(./assets/img/256.gif);
  font-size: 45px;
}

.tile512 {
  color: #ffe;
  background-image: url(./assets/img/512.gif);
  font-size: 45px;
}

.tile1024 {
  color: #fff;
  background-image: url(./assets/img/1024.gif);
  font-size: 35px;
}

.tile2048 {
  position: absolute;
  background-size: contain;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  padding: 0px;
  color: #fff;
  background-image: url(./assets/img/2048.gif);
  font-size: 35px;
}

.try-again {
  z-index: 10;
  height: 100px;
  width: 100px;
  background-image: url(./assets/img/try-again.gif);
}

.tile {
  position: absolute;
}

.tile.merged {
  display: none;
}

.tile.merged.isMoving {
  display: inline;
}

.tile.new {
  animation-duration: 0.3s;
  animation-name: newTile;
  animation-fill-mode: forwards;
  animation-delay: 0.15s;
  transform: scale(0);
}

@keyframes newTile {
  from {
    transform: scale(0);
  }
  to {
    transform: scale(1);
  }
}

.message {
  color: #666;
}

.header {
  font-family: 'Poppins', sans-serif;
  position: fixed;
  font-size: 20vh;
  top: 0;
  left: 50%;
  padding: 0;
  margin: 0;
  transform: translateX(-50%);
  color: #EDF7B5;
  font-style: italic;
  letter-spacing: 0.5rem;
}

.room-controls {
  display: flex;
  margin: auto;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.join-room-controls {
  display: flex;
  width: 100%;
  margin: auto;
  justify-content: center;
  gap: 15px;
}

.joinRoomButton {
  background-color: #3d2963;
  color: rgba(255, 255, 255, 0.5);
  width: 7rem;
  cursor: pointer;
  text-align: center;
  font-size: 25px;
  padding: 10px 20px;
  border-radius: 15px;
  transition: color 0.3s ease, background-color 0.3s ease;
  margin: 0.5em 0;
}

.createRoomButton {
  background-color: #3d2963;
  color: rgba(255, 255, 255, 0.5);
  width: calc(15rem + 55px);
  cursor: pointer;
  text-align: center;
  font-size: 25px;
  padding: 10px 0px;
  border-radius: 15px;
  transition: color 0.3s ease, background-color 0.3s ease;
  margin: 0.5em 0;
}

input {
  margin: 10px 0px;
  border: none;
  padding: 0px;
  border-radius: 5px;
  font-size: 25px;
  width: 8rem;
  text-align: center;
}

.createRoomButton:hover {
  color: rgba(255, 255, 255, 1);
}

.joinRoomButton:hover {
  color: rgba(255, 255, 255, 1);
}

.createRoomButton:active {
  transform: translateY(0rem);
  box-shadow: none;
}

.current-room {
  color: rgba(255, 255, 255, 0.5);
  position: fixed;
  bottom: 15px;
  left: 50%;
  transform: translateX(-50%);
}

.boardB-waiting {
  opacity: 0.5;
  transition: opacity 0.3s ease;
}

#waiting-text {
  margin-left: 10px;
  color: #261a3d;
  opacity: 1;
  align-self: flex-end;
}

.boardB-ready {
  opacity: 1;
}

.lost {
  opacity: 0.5;
  transition: opacity 1s ease;
}

.youLost {
  margin-right: 10px;
  align-self: flex-end;
  color: rgba(255, 255, 255, 0.5);
  font-size: 2rem;
}

@for $row from 0 through 3 {
  @for $column from 0 through 3 {
    .position_#{$row}_#{$column}:not(.isMoving) {
      top: 110 * $row + 5px;
      left: 110 * $column + 5px;
    }
  }
}

@for $fromRow from 0 through 3 {
  @for $toRow from 0 through 3 {
    $name: row_from_#{$fromRow}_to_#{$toRow};

    @if $fromRow == $toRow {
      .#{$name} {
        top: 110 * $toRow + 5px;
      }
    } @else {
      .#{$name} {
        animation-duration: 0.2s;
        animation-name: $name;
        animation-fill-mode: forwards;
      }

      @keyframes #{$name} {
        from {
          top: 110 * $fromRow + 5px;
        }
        to {
          top: 110 * $toRow + 5px;
        }
      }
    }
  }
}

@for $fromColumn from 0 through 3 {
  @for $toColumn from 0 through 3 {
    $name: column_from_#{$fromColumn}_to_#{$toColumn};

    @if $fromColumn == $toColumn {
      .#{$name} {
        left: 110 * $toColumn + 5px;
      }
    } @else {
      .#{$name} {
        animation-duration: 0.2s;
        animation-name: $name;
        animation-fill-mode: forwards;
      }

      @keyframes #{$name} {
        from {
          left: 110 * $fromColumn + 5px;
        }
        to {
          left: 110 * $toColumn + 5px;
        }
      }
    }
  }
}
